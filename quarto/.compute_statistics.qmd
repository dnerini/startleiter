
```{python}
from datetime import datetime, timedelta, timezone

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

from startleiter.utils import get_engine, get_flights

engine = get_engine()
df = get_flights(engine, TARGET_SITE_ID)
```

## Annual statistics

```{python}
#| label: fig-counts-by-year
#| fig-cap: Total number of flights per year

dfg = df.groupby(df.datetime.dt.year).datetime.count()
ax = dfg.plot(kind="bar", ylabel="No. of flights []", xlabel="Year")
```

```{python}
#| label: fig-altitude-by-year
#| fig-cap: Maximum flight altitude per year

dfg = df.groupby(df.datetime.dt.year).max_altitude_m
dmed = dfg.median()
dmax = dfg.max()
err = (np.abs(dfg.quantile([0.1, 0.9]) - dmed)).unstack()
ax = dmed.plot.bar(yerr=err.values.T, ylabel="Max altitude [masl]", xlabel="Year")
for i, p in enumerate(ax.patches):
    ax.plot(p.get_center()[0], dmax.iloc[i], marker="*", ls=None, c="C0")
```

```{python}
#| label: fig-distance-by-year
#| fig-cap: Maximum flight distance per year

dfg = df.groupby(df.datetime.dt.year).length_km
dmed = dfg.median()
dmax = dfg.max()
err = (np.abs(dfg.quantile([0.1, 0.9]) - dmed)).unstack()
ax = dmed.plot.bar(yerr=err.values.T, ylabel="Max distance [km]")
for i, p in enumerate(ax.patches):
    ax.plot(p.get_center()[0], dmax.iloc[i], marker="*", ls=None, c="C0")
```

```{python}
#| label: fig-duration-by-year
#| fig-cap: Maximum flight duration per year

dfg = df.groupby(df.datetime.dt.year).airtime_hours
dmed = dfg.median()
dmax = dfg.max()
err = (np.abs(dfg.quantile([0.1, 0.9]) - dmed)).unstack()
ax = dmed.plot.bar(yerr=err.values.T, ylabel="Max airtime [h]")
for i, p in enumerate(ax.patches):
    ax.plot(p.get_center()[0], dmax.iloc[i], marker="*", ls=None, c="C0")
```

## Monthly statistics

```{python}
#| label: fig-counts-by-month
#| fig-cap: Total number of flights per month

dfg = df.groupby(df.datetime.dt.month).datetime.count()
ax = dfg.plot(kind="bar", ylabel="No. of flights []", xlabel="Month")
```

```{python}
#| label: fig-altitude-by-month
#| fig-cap: Maximum flight altitude per month
months = pd.date_range("1900-01-01", "1900-12-01", freq='MS').strftime("%b")
ax = sns.catplot(x="month", y="max_altitude_m", order=months, data=df)
```

```{python}
#| label: fig-distance-by-month
#| fig-cap: Maximum flight distance per month

ax = sns.catplot(x="length_km", y="month", order=months, data=df)
```

```{python}
#| label: fig-duration-by-month
#| fig-cap: Maximum flight duration per month

ax = sns.catplot(x="airtime_hours", y="month", order=months, data=df)
```

